[{"C:\\Users\\PHOTOG\\streams\\client\\src\\index.js":"1","C:\\Users\\PHOTOG\\streams\\client\\src\\App.js":"2","C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamCreate.js":"3","C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamDelete.js":"4","C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamList.js":"5","C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamEdit.js":"6","C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamShow.js":"7","C:\\Users\\PHOTOG\\streams\\client\\src\\Components\\Header.js":"8","C:\\Users\\PHOTOG\\streams\\client\\src\\Services\\GoogleAuth\\GoogleAuth.js":"9","C:\\Users\\PHOTOG\\streams\\client\\src\\Reducers\\index.js":"10","C:\\Users\\PHOTOG\\streams\\client\\src\\Action\\index.js":"11","C:\\Users\\PHOTOG\\streams\\client\\src\\Reducers\\AuthReducers.js":"12","C:\\Users\\PHOTOG\\streams\\client\\src\\Services\\AxiosInstances\\AxiosInstances.js":"13","C:\\Users\\PHOTOG\\streams\\client\\src\\Action\\Types\\index.js":"14","C:\\Users\\PHOTOG\\streams\\client\\src\\Reducers\\StreamReducer.js":"15","C:\\Users\\PHOTOG\\streams\\client\\src\\History\\history.js":"16","C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamFrom.js":"17","C:\\Users\\PHOTOG\\streams\\client\\src\\Components\\Model.js":"18","C:\\Users\\PHOTOG\\streams\\client\\src\\Components\\Carousel.js":"19","C:\\Users\\PHOTOG\\streams\\client\\src\\Components\\Footer.js":"20","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\index.js":"21","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\App.js":"22","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Reducers\\index.js":"23","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamCreate.js":"24","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamDelete.js":"25","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\History\\history.js":"26","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Components\\Header.js":"27","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Components\\Footer.js":"28","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamList.js":"29","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamEdit.js":"30","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamShow.js":"31","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Reducers\\StreamReducer.js":"32","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Reducers\\AuthReducers.js":"33","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamFrom.js":"34","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Components\\Model.js":"35","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Components\\Carousel.js":"36","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Action\\index.js":"37","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Services\\GoogleAuth\\GoogleAuth.js":"38","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Services\\AxiosInstances\\AxiosInstances.js":"39","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Action\\Types\\index.js":"40","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\Home.js":"41"},{"size":565,"mtime":1609752438042,"results":"42","hashOfConfig":"43"},{"size":1043,"mtime":1610388378362,"results":"44","hashOfConfig":"43"},{"size":795,"mtime":1610727561300,"results":"45","hashOfConfig":"43"},{"size":1445,"mtime":1609945713230,"results":"46","hashOfConfig":"43"},{"size":4102,"mtime":1610729693676,"results":"47","hashOfConfig":"43"},{"size":1680,"mtime":1610043857653,"results":"48","hashOfConfig":"43"},{"size":1565,"mtime":1610044193855,"results":"49","hashOfConfig":"43"},{"size":751,"mtime":1610387626880,"results":"50","hashOfConfig":"43"},{"size":2405,"mtime":1610008252640,"results":"51","hashOfConfig":"43"},{"size":299,"mtime":1609778147678,"results":"52","hashOfConfig":"43"},{"size":2122,"mtime":1610368171541,"results":"53","hashOfConfig":"43"},{"size":626,"mtime":1610012308243,"results":"54","hashOfConfig":"43"},{"size":220,"mtime":1609778347957,"results":"55","hashOfConfig":"43"},{"size":229,"mtime":1609770701581,"results":"56","hashOfConfig":"43"},{"size":689,"mtime":1609781278125,"results":"57","hashOfConfig":"43"},{"size":94,"mtime":1609857614871,"results":"58","hashOfConfig":"43"},{"size":2562,"mtime":1610357837269,"results":"59","hashOfConfig":"43"},{"size":593,"mtime":1609945639877,"results":"60","hashOfConfig":"43"},{"size":1128,"mtime":1610387866455,"results":"61","hashOfConfig":"43"},{"size":751,"mtime":1610387940405,"results":"62","hashOfConfig":"43"},{"size":544,"mtime":1612609269207,"results":"63","hashOfConfig":"64"},{"size":1100,"mtime":1612609264849,"results":"65","hashOfConfig":"64"},{"size":289,"mtime":1611377474549,"results":"66","hashOfConfig":"64"},{"size":766,"mtime":1611377474710,"results":"67","hashOfConfig":"64"},{"size":1388,"mtime":1611377474758,"results":"68","hashOfConfig":"64"},{"size":91,"mtime":1611377474409,"results":"69","hashOfConfig":"64"},{"size":786,"mtime":1612609108865,"results":"70","hashOfConfig":"64"},{"size":722,"mtime":1611377474276,"results":"71","hashOfConfig":"64"},{"size":4242,"mtime":1612605609134,"results":"72","hashOfConfig":"64"},{"size":1611,"mtime":1611377474809,"results":"73","hashOfConfig":"64"},{"size":1460,"mtime":1611377474958,"results":"74","hashOfConfig":"64"},{"size":664,"mtime":1611377474510,"results":"75","hashOfConfig":"64"},{"size":594,"mtime":1611377474462,"results":"76","hashOfConfig":"64"},{"size":2474,"mtime":1611377474858,"results":"77","hashOfConfig":"64"},{"size":573,"mtime":1611377474355,"results":"78","hashOfConfig":"64"},{"size":1224,"mtime":1612608800990,"results":"79","hashOfConfig":"64"},{"size":2045,"mtime":1611377473785,"results":"80","hashOfConfig":"64"},{"size":2320,"mtime":1611377474661,"results":"81","hashOfConfig":"64"},{"size":210,"mtime":1611377474608,"results":"82","hashOfConfig":"64"},{"size":224,"mtime":1611377473821,"results":"83","hashOfConfig":"64"},{"size":4894,"mtime":1612611027113,"results":"84","hashOfConfig":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"4togly",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qehjvt",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"139"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"139"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"139"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PHOTOG\\streams\\client\\src\\index.js",[],["180","181"],"C:\\Users\\PHOTOG\\streams\\client\\src\\App.js",["182"],"import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport history from \"./History/history\";\nimport StreamCreate from \"./Streams/StreamCreate\";\nimport StreamDelete from \"./Streams/StreamDelete\";\nimport StreamEdit from \"./Streams/StreamEdit\";\nimport StreamList from \"./Streams/StreamList\";\nimport StreamShow from \"./Streams/StreamShow\";\nimport Footer from \"./Components/Footer\";\n\nconst App = () => {\n  document.title = \"Best Entertainment\";\n  return (\n    <>\n      <Router history={history}>\n        <Header />\n\n        <div>\n          <Switch>\n            <Route path=\"/\" exact component={StreamList} />\n            <Route path=\"/streams/new\" component={StreamCreate} />\n            <Route path=\"/streams/edit/:id\" component={StreamEdit} />\n            <Route path=\"/streams/delete/:id\" component={StreamDelete} />\n            <Route path=\"/streams/:id\" component={StreamShow} />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamCreate.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamDelete.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamList.js",["183"],"C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamEdit.js",["184"],"import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Message,\r\n  Segment,\r\n  Header,\r\n  Grid,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport { editStream, fetchStream } from \"../Action\";\r\nimport StreamFrom from \"./StreamFrom\";\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = (formValues) => {\r\n    const { id } = this.props.match.params;\r\n    this.props.editStream(id, formValues);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.stream) {\r\n      return (\r\n        <Segment>\r\n          <Dimmer active inverted>\r\n            <Loader size=\"large\">Loading</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <Grid centered>\r\n            <Grid.Column style={{ maxWidth: 600, marginTop: 20 }}>\r\n              <Segment>\r\n                <Header as=\"h1\" textAlign=\"center\">\r\n                  Edit Your Stream\r\n                </Header>\r\n                <StreamFrom\r\n                  initialValues={_.pick(\r\n                    this.props.stream,\r\n                    \"title\",\r\n                    \"description\"\r\n                  )}\r\n                  onSubmit={this.onSubmit}\r\n                />\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst MapStateToProps = (state, ownProps) => {\r\n  console.log(\"OwnProps\", ownProps);\r\n  return {\r\n    stream: state.streams[ownProps.match.params.id],\r\n  };\r\n};\r\n\r\nexport default connect(MapStateToProps, { fetchStream, editStream })(\r\n  StreamEdit\r\n);\r\n","C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamShow.js",["185","186","187"],"import React from \"react\";\r\nimport flv from \"flv.js\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  Dimmer,\r\n  Divider,\r\n  Loader,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { fetchStream } from \"../Action\";\r\n\r\nclass StreamShow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.videoRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.fetchStream(id);\r\n    this.buildPlayer();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.buildPlayer();\r\n  }\r\n\r\n  buildPlayer() {\r\n    if (this.player || !this.props.stream) {\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    this.player = flv.createPlayer({\r\n      type: \"flv\",\r\n      url: `http://localhost:8000/live/${id}.flv`,\r\n    });\r\n    this.player.attachMediaElement(this.videoRef.current);\r\n    this.player.load();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.stream) {\r\n      return <div>Loading..</div>;\r\n    }\r\n\r\n    const { title, description } = this.props.stream;\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Segment>\r\n            <video ref={this.videoRef} style={{ width: \"100%\" }} controls />\r\n            <h2>{title}</h2>\r\n            <Divider />\r\n            <h3>{description}</h3>\r\n          </Segment>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst MapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\nexport default connect(MapStateToProps, { fetchStream })(StreamShow);\r\n","C:\\Users\\PHOTOG\\streams\\client\\src\\Components\\Header.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Services\\GoogleAuth\\GoogleAuth.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Reducers\\index.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Action\\index.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Reducers\\AuthReducers.js",["188"],"const INITIAL_STATE = {\r\n  isSignedIn: null,\r\n  UserProfile: {\r\n    userId: null,\r\n    UserEmail: null,\r\n    UserImage: null,\r\n    UserName: null,\r\n  },\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        UserProfile: action.payload,\r\n      };\r\n    case \"SIGN_OUT\":\r\n      return {\r\n        ...state,\r\n        isSignedIn: false,\r\n        UserProfile: {\r\n          userId: null,\r\n          UserEmail: null,\r\n          UserImage: null,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\PHOTOG\\streams\\client\\src\\Services\\AxiosInstances\\AxiosInstances.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Action\\Types\\index.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Reducers\\StreamReducer.js",["189"],"import _ from \"lodash\";\r\nimport {\r\n  CREATE_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n} from \"../Action/Types\";\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STREAMS:\r\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\r\n    case FETCH_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case EDIT_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case CREATE_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case DELETE_STREAM:\r\n      return _.omit(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\PHOTOG\\streams\\client\\src\\History\\history.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Streams\\StreamFrom.js",["190","191","192"],"import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Input,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\n\r\nconst StreamForm = (formProps) => {\r\n  // onSubmit function is winded up by the redux form file\r\n  const onSubmit = (formValues) => {\r\n    formProps.onSubmit(formValues);\r\n  };\r\n  // A rest conventions or restful conventions are a predefined system for defining different routes on an\r\n  //API that work with a given type of records.\r\n  // That's super unclear.\r\n  const RenderInput = ({ input, label, meta }) => {\r\n    // RenderError Function is for the validation and the touched parametre is from the\r\n    //argument props passed by\r\n    const renderError = ({ error, touched }) => {\r\n      if (touched && error) {\r\n        return (\r\n          <Label basic color=\"red\" pointing>\r\n            <Icon name=\"exclamation triangle\" />\r\n            {meta.error}\r\n          </Label>\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <>\r\n        <label>{label}</label>\r\n        <Input {...input} />\r\n        {renderError(meta)}\r\n      </> // alternate sytex for this is <Input onChange ={form.input.onchange} value={from.input.value}\r\n    );\r\n  };\r\n  // console.log(formProps); // value of the objec t which s in the StreamForm Hence this value is gonna update in the form filling object\r\n\r\n  return (\r\n    <Form onSubmit={formProps.handleSubmit(onSubmit)}>\r\n      <Form.Field>\r\n        <Field\r\n          name=\"title\"\r\n          component={RenderInput}\r\n          placeholder=\"title of your stream\"\r\n          label=\"Enter Title\"\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <Field\r\n          name=\"description\"\r\n          component={RenderInput}\r\n          placeholder=\"Enter Your Stream Description\"\r\n          label=\"Enter Description\"\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <Button fluid primary>\r\n          Submit\r\n        </Button>\r\n      </Form.Field>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n  // Validate function to render the value by using the redux\r\n  if (!formValues.title) {\r\n    errors.title = \"You must enter a Title\";\r\n  }\r\n  if (!formValues.description) {\r\n    errors.description = \"You must enter a Description\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n  // this are the value for the redux store to add. and this steamCreate object store the value in the redux which is the value of form input\r\n  form: \"StreamForm\",\r\n  validate,\r\n})(StreamForm);\r\n","C:\\Users\\PHOTOG\\streams\\client\\src\\Components\\Model.js",[],"C:\\Users\\PHOTOG\\streams\\client\\src\\Components\\Carousel.js",["193","194","195"],"import { Carousel } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport slider1 from \"../Assets/slider1.jpg\";\r\nimport slider2 from \"../Assets/slider2.jpg\";\r\nimport slider3 from \"../Assets/slider3.jpg\";\r\n\r\nconst Slider = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Carousel>\r\n        <Carousel.Item interval={1000}>\r\n          <img src={slider1} width=\"100%\" />\r\n          <Carousel.Caption>\r\n            <h3>Happy Gaming</h3>\r\n            <p>\r\n              Just your everyday gamer just trying to fulfill your entertainment\r\n              needs! Come stop by and watch Python_GamingHD stream all sorts of\r\n              games! Remember to hit that follow button for notifications for\r\n              when I go live!! HAPPY GAMING!\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={1000}>\r\n          <img src={slider2} width=\"100%\" />\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={1000}>\r\n          <img src={slider3} width=\"100%\" />\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","C:\\Users\\PHOTOG\\streams\\client\\src\\Components\\Footer.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\index.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\App.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Reducers\\index.js",[],["196","197"],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamCreate.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamDelete.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\History\\history.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Components\\Header.js",["198"],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Components\\Footer.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamList.js",["199"],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamEdit.js",["200"],"import _ from \"lodash\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Message,\n  Segment,\n  Header,\n  Grid,\n  Dimmer,\n  Loader,\n} from \"semantic-ui-react\";\nimport { editStream, fetchStream } from \"../Action\";\nimport StreamFrom from \"./StreamFrom\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit = (formValues) => {\n    const { id } = this.props.match.params;\n    this.props.editStream(id, formValues);\n  };\n\n  render() {\n    if (!this.props.stream) {\n      return (\n        <Segment>\n          <Dimmer active inverted>\n            <Loader size=\"large\">Loading</Loader>\n          </Dimmer>\n        </Segment>\n      );\n    } else {\n      return (\n        <>\n          <Grid centered>\n            <Grid.Column style={{ maxWidth: 600, marginTop: 20 }}>\n              <Segment>\n                <Header as=\"h1\" textAlign=\"center\">\n                  Edit Your Stream\n                </Header>\n                <StreamFrom\n                  initialValues={_.pick(\n                    this.props.stream,\n                    \"title\",\n                    \"description\"\n                  )}\n                  onSubmit={this.onSubmit}\n                />\n              </Segment>\n            </Grid.Column>\n          </Grid>\n        </>\n      );\n    }\n  }\n}\n\nconst MapStateToProps = (state, ownProps) => {\n  console.log(\"OwnProps\", ownProps);\n  return {\n    stream: state.streams[ownProps.match.params.id],\n  };\n};\n\nexport default connect(MapStateToProps, { fetchStream, editStream })(\n  StreamEdit\n);\n","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamShow.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Reducers\\StreamReducer.js",["201"],"import _ from \"lodash\";\nimport {\n  CREATE_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n  FETCH_STREAM,\n  FETCH_STREAMS,\n} from \"../Action/Types\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\n    case FETCH_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case EDIT_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n};\n","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Reducers\\AuthReducers.js",["202"],"const INITIAL_STATE = {\n  isSignedIn: null,\n  UserProfile: {\n    userId: null,\n    UserEmail: null,\n    UserImage: null,\n    UserName: null,\n  },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      return {\n        ...state,\n        isSignedIn: true,\n        UserProfile: action.payload,\n      };\n    case \"SIGN_OUT\":\n      return {\n        ...state,\n        isSignedIn: false,\n        UserProfile: {\n          userId: null,\n          UserEmail: null,\n          UserImage: null,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\StreamFrom.js",["203","204","205"],"import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  Button,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Label,\n} from \"semantic-ui-react\";\n\nconst StreamForm = (formProps) => {\n  // onSubmit function is winded up by the redux form file\n  const onSubmit = (formValues) => {\n    formProps.onSubmit(formValues);\n  };\n  // A rest conventions or restful conventions are a predefined system for defining different routes on an\n  //API that work with a given type of records.\n  // That's super unclear.\n  const RenderInput = ({ input, label, meta }) => {\n    // RenderError Function is for the validation and the touched parametre is from the\n    //argument props passed by\n    const renderError = ({ error, touched }) => {\n      if (touched && error) {\n        return (\n          <Label basic color=\"red\" pointing>\n            <Icon name=\"exclamation triangle\" />\n            {meta.error}\n          </Label>\n        );\n      }\n    };\n    return (\n      <>\n        <label>{label}</label>\n        <Input {...input} />\n        {renderError(meta)}\n      </> // alternate sytex for this is <Input onChange ={form.input.onchange} value={form.input.value}\n    );\n  };\n  // console.log(formProps); // value of the object which is in the StreamForm Hence this value is gonna update in the form filling object\n\n  return (\n    <Form onSubmit={formProps.handleSubmit(onSubmit)}>\n      <Form.Field>\n        <Field\n          name=\"title\"\n          component={RenderInput}\n          placeholder=\"title of your stream\"\n          label=\"Enter Title\"\n        />\n      </Form.Field>\n      <Form.Field>\n        <Field\n          name=\"description\"\n          component={RenderInput}\n          placeholder=\"Enter Your Stream Description\"\n          label=\"Enter Description\"\n        />\n      </Form.Field>\n      <Form.Field>\n        <Button fluid primary>\n          Submit\n        </Button>\n      </Form.Field>\n    </Form>\n  );\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n  // Validate function to render the value by using the redux\n  if (!formValues.title) {\n    errors.title = \"You must enter a Title\";\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a Description\";\n  }\n  return errors;\n};\n\nexport default reduxForm({\n  // this are the value for the redux store to add. and this steamCreate object store the value in the redux which is the value of form input\n  form: \"StreamForm\",\n  validate,\n})(StreamForm);\n","C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Components\\Model.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Components\\Carousel.js",["206","207","208","209"],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Action\\index.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Services\\GoogleAuth\\GoogleAuth.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Services\\AxiosInstances\\AxiosInstances.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Action\\Types\\index.js",[],"C:\\Users\\PHOTOG\\Copies\\streams\\client\\src\\Streams\\Home.js",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":14},{"ruleId":"214","severity":1,"message":"218","line":8,"column":3,"nodeType":"216","messageId":"217","endLine":8,"endColumn":9},{"ruleId":"214","severity":1,"message":"219","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":10},{"ruleId":"214","severity":1,"message":"220","line":6,"column":3,"nodeType":"216","messageId":"217","endLine":6,"endColumn":9},{"ruleId":"214","severity":1,"message":"221","line":8,"column":3,"nodeType":"216","messageId":"217","endLine":8,"endColumn":9},{"ruleId":"214","severity":1,"message":"219","line":9,"column":3,"nodeType":"216","messageId":"217","endLine":9,"endColumn":10},{"ruleId":"222","severity":1,"message":"223","line":11,"column":1,"nodeType":"224","endLine":32,"endColumn":3},{"ruleId":"222","severity":1,"message":"223","line":10,"column":1,"nodeType":"224","endLine":25,"endColumn":3},{"ruleId":"214","severity":1,"message":"225","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":10},{"ruleId":"214","severity":1,"message":"226","line":7,"column":3,"nodeType":"216","messageId":"217","endLine":7,"endColumn":7},{"ruleId":"214","severity":1,"message":"218","line":8,"column":3,"nodeType":"216","messageId":"217","endLine":8,"endColumn":9},{"ruleId":"227","severity":1,"message":"228","line":12,"column":11,"nodeType":"229","endLine":12,"endColumn":45},{"ruleId":"227","severity":1,"message":"228","line":24,"column":11,"nodeType":"229","endLine":24,"endColumn":45},{"ruleId":"227","severity":1,"message":"228","line":27,"column":11,"nodeType":"229","endLine":27,"endColumn":45},{"ruleId":"210","replacedBy":"230"},{"ruleId":"212","replacedBy":"231"},{"ruleId":"214","severity":1,"message":"232","line":4,"column":23,"nodeType":"216","messageId":"217","endLine":4,"endColumn":32},{"ruleId":"214","severity":1,"message":"233","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":14},{"ruleId":"214","severity":1,"message":"219","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":10},{"ruleId":"222","severity":1,"message":"223","line":10,"column":1,"nodeType":"224","endLine":25,"endColumn":3},{"ruleId":"222","severity":1,"message":"223","line":11,"column":1,"nodeType":"224","endLine":32,"endColumn":3},{"ruleId":"214","severity":1,"message":"225","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":10},{"ruleId":"214","severity":1,"message":"226","line":7,"column":3,"nodeType":"216","messageId":"217","endLine":7,"endColumn":7},{"ruleId":"214","severity":1,"message":"218","line":8,"column":3,"nodeType":"216","messageId":"217","endLine":8,"endColumn":9},{"ruleId":"227","severity":1,"message":"228","line":13,"column":11,"nodeType":"229","endLine":13,"endColumn":45},{"ruleId":"227","severity":1,"message":"228","line":16,"column":11,"nodeType":"229","endLine":16,"endColumn":45},{"ruleId":"227","severity":1,"message":"228","line":28,"column":11,"nodeType":"229","endLine":28,"endColumn":45},{"ruleId":"227","severity":1,"message":"228","line":31,"column":11,"nodeType":"229","endLine":31,"endColumn":45},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Message' is defined but never used.","'Dimmer' is defined but never used.","'Loader' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Divider' is defined but never used.","'Grid' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["234"],["235"],"'Container' is defined but never used.","'Slider' is defined but never used.","no-global-assign","no-unsafe-negation"]